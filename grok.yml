---
- name: Gather health metrics and log
  hosts: all
  gather_facts: true

  vars:
    log_dir: 'C:\Temp\logfile'
    log_file: "{{ log_dir }}\\health_check_{{ ansible_date_time.iso8601_basic_short }}.log"

  tasks:
    - name: Ensure C:\Scripts exists on Windows
      ansible.windows.win_file:
        path: 'C:\Scripts'
        state: directory
      when: ansible_facts.os_family == 'Windows'

    - name: Copy check.sh for Linux
      ansible.builtin.copy:
        src: scripts/check.sh
        dest: /usr/local/bin/check.sh
        mode: '0755'
      when: ansible_facts.os_family == 'RedHat'

    - name: Run health‐check script
      block:
        - ansible.builtin.script: scripts/check.sh
          when: ansible_facts.os_family == 'RedHat'
        - ansible.windows.win_shell: >
            powershell -NoProfile -NonInteractive -ExecutionPolicy Bypass
            -File C:\Scripts\check.ps1
          when: ansible_facts.os_family == 'Windows'
      register: script_out
      changed_when: false
      failed_when: script_out.rc != 0

    - name: Extract CPU, RAM, DISK as floats
      ansible.builtin.set_fact:
        cpu:  "{{ (script_out.stdout | regex_search('CPU=(\\d+\\.?\\d*)','\\1') | default('0', true)) | float }}"
        ram:  "{{ (script_out.stdout | regex_search('RAM=(\\d+\\.?\\d*)','\\1') | default('0', true)) | float }}"
        disk: "{{ (script_out.stdout | regex_search('DISK=(\\d+\\.?\\d*)','\\1') | default('0', true)) | float }}"

    - name: Determine overall status
      ansible.builtin.set_fact:
        status: "{{ 'CRITICAL' if cpu > 60 or ram > 60 or disk > 60 else 'GOOD' }}"

    - name: Debug host metrics
      ansible.builtin.debug:
        msg: "Host={{ inventory_hostname }} CPU={{ cpu }}% RAM={{ ram }}% DISK={{ disk }}% STATUS={{ status }}"

- name: Write consolidated report on logger node
  hosts: 10.206.2.30
  gather_facts: false

  vars:
    log_dir:  'C:\Temp\logfile'
    log_file: "{{ log_dir }}\\health_check_{{ ansible_date_time.iso8601_basic_short }}.log"

  tasks:
    - name: Ensure log directory exists
      ansible.windows.win_file:
        path: "{{ log_dir }}"
        state: directory

    - name: Write health summary to log file
      ansible.windows.win_copy:
        dest: "{{ log_file }}"
        content: |
          ####################################################################
          #                Node Health Check Summary Report                 #
          ####################################################################
          Host | OS       | CPU    | RAM    | DISK   | STATUS
          {% for host in ansible_play_hosts_all %}
          {{ hostvars[host].inventory_hostname }} |
          {{ hostvars[host].ansible_facts.os_family | ljust(8) }} |
          {{ '%.2f%%'|format(hostvars[host].cpu  | float) }} |
          {{ '%.2f%%'|format(hostvars[host].ram  | float) }} |
          {{ '%.2f%%'|format(hostvars[host].disk | float) }} |
          {{ hostvars[host].status }}
          {% endfor %}
          --------------------------------------------------------------------
          Job ID:      {{ awx_job_id | default('manual_job_' + ansible_date_time.iso8601_basic_short) }}
          Time:        {{ ansible_date_time.iso8601 }}
          Executed by: {{ ansible_user_id }}
          Log File:    {{ log_file }}
          ####################################################################

    - name: Verify log file exists
      ansible.windows.win_stat:
        path: "{{ log_file }}"
      register: log_stat

    - name: Debug log file existence
      ansible.builtin.debug:
        msg: "Log exists={{ log_stat.stat.exists }}, isreg={{ log_stat.stat.isreg }}"
