---
- name: Collect health metrics from all nodes
  hosts: all
  gather_facts: true

  vars:
    logger_host:  "10.206.2.30"
    log_dir:      'C:\Temp\logfile'
    log_file:     "{{ log_dir }}\\health_check_{{ ansible_date_time.iso8601_basic_short }}.log"

  tasks:
    - name: Ensure C:\Scripts exists on Windows
      ansible.windows.win_file:
        path: 'C:\Scripts'
        state: directory
      when: ansible_facts.os_family == 'Windows'

    - name: Run health check on Linux
      ansible.builtin.script: scripts/check.sh
      when: ansible_facts.os_family == 'RedHat'
      register: check_out
      changed_when: false
      failed_when: check_out.rc != 0

    - name: Run health check on Windows
      ansible.windows.win_script: scripts/check.ps1
      when: ansible_facts.os_family == 'Windows'
      register: check_out
      changed_when: false
      failed_when: check_out.rc != 0

    - name: Parse CPU, RAM, DISK into floats
      ansible.builtin.set_fact:
        cpu:   "{{ (check_out.stdout  | regex_search('CPU=(\\d+\\.?\\d*)','\\1') | default('0')) | float }}"
        ram:   "{{ (check_out.stdout  | regex_search('RAM=(\\d+\\.?\\d*)','\\1') | default('0')) | float }}"
        disk:  "{{ (check_out.stdout  | regex_search('DISK=(\\d+\\.?\\d*)','\\1') | default('0')) | float }}"
        status: >-
          {{ 'CRITICAL'
             if (cpu|float) > 60
             or (ram|float) > 60
             or (disk|float) > 60
             else 'GOOD' }}

    - name: Debug host metrics
      ansible.builtin.debug:
        msg: >
          Host={{ inventory_hostname }}
          CPU={{ '%.2f%%'|format(cpu) }}
          RAM={{ '%.2f%%'|format(ram) }}
          DISK={{ '%.2f%%'|format(disk) }}
          STATUS={{ status }}

- name: Write consolidated report on logger node
  hosts: "{{ logger_host }}"
  gather_facts: false

  vars:
    log_dir:  'C:\Temp\logfile'
    log_file: "{{ log_dir }}\\health_check_{{ ansible_date_time.iso8601_basic_short }}.log"

  tasks:
    - name: Ensure log directory exists
      ansible.windows.win_file:
        path: "{{ log_dir }}"
        state: directory

    - name: Write health summary to log file
      ansible.windows.win_copy:
        dest: "{{ log_file }}"
        content: |
          ####################################################################
          #                Node Health Check Summary Report                 #
          ####################################################################
          Host                 | OS         |   CPU |   RAM |  DISK | STATUS
          --------------------------------------------------------------------
          {% for host in ansible_play_hosts_all %}
          {{ '%-20s'|format(host) }} | {{ '%-10s'|format(hostvars[host].ansible_facts.os_family) }} | {{ '%5s'|format('%.2f%%'|format(hostvars[host].cpu)) }} | {{ '%5s'|format('%.2f%%'|format(hostvars[host].ram)) }} | {{ '%5s'|format('%.2f%%'|format(hostvars[host].disk)) }} | {{ hostvars[host].status }}
          {% endfor %}
          --------------------------------------------------------------------
          Job ID:      {{ awx_job_id | default('manual_job_' + ansible_date_time.iso8601_basic_short) }}
          Time:        {{ ansible_date_time.iso8601 }}
          Executed by: {{ ansible_user_id }}
          Log File:    {{ log_file }}
          ####################################################################

    - name: Verify log file exists
      ansible.windows.win_stat:
        path: "{{ log_file }}"
      register: log_stat

    - name: Debug log file status
      ansible.builtin.debug:
        msg: "Log exists={{ log_stat.stat.exists }}, isreg={{ log_stat.stat.isreg }}"
